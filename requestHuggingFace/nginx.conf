events {
    worker_connections 1024;
}

http {
    # only one server block is needed for the app
    # The group of servers is simply called "app"
    
    # upstream app {
    #     server app:8000; # connect to the Docker container named "app" on port 8000
    # }
    upstream app { # this is the group of servers
    # The servers are the three instances of the app running on different ports
    least_conn; # use least connections load balancing
    # This will distribute requests to the server with the least number of active connections
    server app1:8000;
    server app2:8000;
    server app3:8000;
}
    server {
        listen 80;
        # this is the maximum size of the request body
        client_max_body_size 50M;
        
        location / {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
           
            # Timeout settings for long-running inference
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        location /health {
            proxy_pass http://app/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}